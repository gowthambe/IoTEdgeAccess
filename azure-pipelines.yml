# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
stages:
- stage: Build
  jobs:
  - job: Build
      
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '2.2.300'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Tests*.csproj'
        testRunTitle: 'Unit Tests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Azure.Iot.Edge.Modules.SecureAccess.csproj'
        arguments: '-c Release -o $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: Deploy
  dependsOn:
  - Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'SEDataHubRegistry'
        repository: 'iot-edge-modules-secureaccess-ARM32v7-release'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile.arm32v7.cicd'
        buildContext: $(Build.ArtifactStagingDirectory)