# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
stages:
- stage: Build
  jobs:
  - job: Build
      
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '2.2.300'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Artefacts'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Azure.Iot.Edge.Modules.SecureAccess.csproj'
        arguments: '-c Release -o published'
        zipAfterPublish: false
    - task: DotNetCoreCLI@2
      displayName: 'Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests*.csproj'
        testRunTitle: 'Unit Tests'
- stage: Deploy
  dependsOn:
  - Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Suneet Nangia Public Docker Hub'
        repository: 'suneetnangia/azure-iot-edge-secure-access'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile.amd64.cicd'
        tags: '$(Build.BuildId)
        Linux'
        buildContext: '**'